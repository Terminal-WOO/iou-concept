version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: iou_postgres
    environment:
      POSTGRES_DB: iou_context
      POSTGRES_USER: iou_user
      POSTGRES_PASSWORD: iou_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/models/organizational_context.sql:/docker-entrypoint-initdb.d/01_schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iou_user -d iou_context"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iou_api
    environment:
      DATABASE_URL: postgresql://iou_user:iou_password@postgres:5432/iou_context
      API_HOST: 0.0.0.0
      API_PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    command: uvicorn src.api.context_service:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (optioneel - simpele static server)
  frontend:
    image: nginx:alpine
    container_name: iou_frontend
    ports:
      - "8080:80"
    volumes:
      - ./src/frontend:/usr/share/nginx/html:ro
    depends_on:
      - api

volumes:
  postgres_data:
    driver: local
